// <auto-generated />
using System;
using Charity.Mvc.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Charity.Mvc.Migrations
{
    [DbContext(typeof(CharityContext))]
    [Migration("20191209210046_InitializeDataBase")]
    partial class InitializeDataBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Charity.Mvc.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CategoriesId");

                    b.Property<string>("City");

                    b.Property<int?>("InstitutionsId");

                    b.Property<string>("PickUpComment");

                    b.Property<DateTime>("PickUpDate");

                    b.Property<DateTime>("PickUpTime");

                    b.Property<string>("Quantity");

                    b.Property<string>("Street");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.HasIndex("InstitutionsId");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("Charity.Mvc.Models.Donation", b =>
                {
                    b.HasOne("Charity.Mvc.Models.Category", "Categories")
                        .WithMany()
                        .HasForeignKey("CategoriesId");

                    b.HasOne("Charity.Mvc.Models.Institution", "Institutions")
                        .WithMany()
                        .HasForeignKey("InstitutionsId");
                });
#pragma warning restore 612, 618
        }
    }
}
